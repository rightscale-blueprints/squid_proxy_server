{
  "groupings": {
  },
  "maintainer_email": "noah@coderanger.net",
  "providing": {
  },
  "platforms": {
    "centos": ">= 0.0.0",
    "fedora": ">= 0.0.0",
    "redhat": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "debian": ">= 0.0.0"
  },
  "conflicting": {
  },
  "attributes": {
    "collectd/plugin_dir": {
      "required": "optional",
      "default": "/usr/lib/collectd",
      "type": "string",
      "display_name": "collectd Plugin Directory",
      "choice": [

      ],
      "recipes": [
        "collectd::default"
      ],
      "description": "The plugin directory for collectd.",
      "calculated": false
    },
    "collectd/types_db": {
      "required": "optional",
      "default": [
        "/usr/share/collectd/types.db"
      ],
      "type": "array",
      "display_name": "collectd Types Database",
      "choice": [

      ],
      "recipes": [
        "collectd::default"
      ],
      "description": "The location of the collectd types.db file.",
      "calculated": false
    },
    "collectd/interval": {
      "required": "optional",
      "default": "20",
      "type": "string",
      "display_name": "collectd Polling Interval",
      "choice": [

      ],
      "recipes": [
        "collectd::default"
      ],
      "description": "The collectd interval setting value.",
      "calculated": false
    },
    "collectd/collectd_web/path": {
      "required": "optional",
      "default": "/srv/collectd_web",
      "type": "string",
      "display_name": "collectd_web path",
      "choice": [

      ],
      "recipes": [
        "collectd::collectd_web"
      ],
      "description": "The collectd_web install path.",
      "calculated": false
    },
    "collectd/fqdn_lookup": {
      "required": "optional",
      "default": "true",
      "type": "string",
      "display_name": "collectd FQDNLookup",
      "choice": [
        "true",
        "false"
      ],
      "recipes": [
        "collectd::default"
      ],
      "description": "The collectd FQDNLookup setting value.",
      "calculated": false
    },
    "collectd/base_dir": {
      "required": "optional",
      "default": "/var/lib/collectd",
      "type": "string",
      "display_name": "collectd Base Directory",
      "choice": [

      ],
      "recipes": [
        "collectd::default"
      ],
      "description": "The base directory for collectd.",
      "calculated": false
    },
    "collectd/read_threads": {
      "required": "optional",
      "default": "5",
      "type": "string",
      "display_name": "collectd Read Threads",
      "choice": [

      ],
      "recipes": [
        "collectd::default"
      ],
      "description": "The collectd read threads setting value.",
      "calculated": false
    },
    "collectd/collectd_web/hostname": {
      "required": "optional",
      "default": "collectd",
      "type": "string",
      "display_name": "collectd_web hostname",
      "choice": [

      ],
      "recipes": [
        "collectd::collectd_web"
      ],
      "description": "The collectd_web hostname.",
      "calculated": false
    },
    "collectd/hostname": {
      "required": "optional",
      "type": "string",
      "display_name": "collectd Hostname",
      "choice": [

      ],
      "recipes": [
        "collectd::default"
      ],
      "description": "The collectd Hostname setting value.",
      "calculated": false
    }
  },
  "long_description": "# DESCRIPTION #\n\nConfigure and install the [collectd](http://collectd.org/) monitoring daemon.\n\n# REQUIREMENTS #\n\nThis cookbook has only been tested on Ubuntu 10.04.\n\nTo use the `collectd::collectd_web` recipe you need the [apache2](https://github.com/opscode/cookbooks/tree/master/apache2) cookbook.\n\nThe [collectd_plugins](#) cookbook is not required, but provides many common plugin definitions for easy reuse.\n\n# ATTRIBUTES #\n\n* collectd.basedir - Base folder for collectd output data.\n* collectd.plugin_dir - Base folder to find plugins.\n* collectd.types_db - Array of files to read graph type information from.\n* collectd.interval - Time period in seconds to wait between data reads.\n\n* collectd.collectd_web.path - Location to install collectd_web to. Defaults to /srv/collectd_web.\n* collectd.collectd_web.hostname - Server name to use for collectd_web Apache site.\n\n# USAGE #\n\nThree main recipes are provided:\n\n* collectd - Install a standalone daemon.\n* collectd::client - Install collectd and configure it to send data to a server.\n* collectd::server - Install collectd and configure it to recieve data from clients.\n\nThe client recipe will use the search index to automatically locate the server hosts, so no manual configuration is required.\n\n## Defines ##\n\nSeveral defines are provided to simplfy configuring plugins\n\n### collectd_plugin ###\n\nThe `collectd_plugin` define configures and enables standard collect plugins. Example:\n\n```ruby\ncollectd_plugin \"interface\" do\n  options :interface=>\"lo\", :ignore_selected=>true\nend\n```\n\nThe options hash is converted to collectd-style settings automatically. Any symbol key will be converted to camel-case. In the above example :ignore_selected will be output as the\nkey \"IgnoreSelected\". If the key is already a string, this conversion is skipped. If the value is an array, it will be output as a separate line for each element.\n\n### collectd_python_plugin ###\n\nThe `collectd_python_plugin` define configures and enables Python plugins using the collectd-python plugin. Example:\n\n```ruby\ncollectd_python_plugin \"redis\" do\n  options :host=>servers, :verbose=>true\nend\n```\n\nOptions are interpreted in the same way as with `collectd_plugin`. This define will not deploy the plugin script as well, so be sure to setup a cookbook_file resource\nor other mechanism to handle distribution. Example:\n\n```ruby\ncookbook_file File.join(node[:collectd][:plugin_dir], \"redis.py\") do\n  owner \"root\"\n  group \"root\"\n  mode \"644\"\nend\n```\n\n## Web frontend ##\n\nThe `collectd::collectd_web` recipe will automatically deploy the [collectd_web](https://github.com/httpdss/collectd-web) frontend using Apache. The \n[apache2](https://github.com/opscode/cookbooks/tree/master/apache2) cookbook is required for this and is *not* included automatically as this is an optional\ncomponent, so be sure to configure the node with the correct recipes.\n\n# LICENSE & AUTHOR #\n\nAuthor:: Noah Kantrowitz (<noah@coderanger.net>)\nCopyright:: 2010, Atari, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "license": "Apache 2.0",
  "replacing": {
  },
  "dependencies": {
    "apache2": ">= 0.0.0"
  },
  "recommendations": {
  },
  "version": "1.0.0",
  "recipes": {
    "collectd::server": "Install collectd and configure it to recieve data from clients.",
    "collectd": "Install a standalone daemon.",
    "collectd::collectd_web": "Installs and configures collectd_web.",
    "collectd::client": "Install collectd and configure it to send data to a server."
  },
  "maintainer": "Noan Kantrowitz",
  "description": "Install and configure the collectd monitoring daemon",
  "suggestions": {
  },
  "name": "collectd"
}